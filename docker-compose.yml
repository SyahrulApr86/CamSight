services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: camsight-backend
    restart: unless-stopped
    networks:
      - camsight-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8000/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # No direct port exposure - accessed through nginx

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_BACKEND_URL: ""
    container_name: camsight-frontend
    restart: unless-stopped
    networks:
      - camsight-network
    depends_on:
      - backend
    # No direct port exposure - accessed through nginx

  nginx:
    image: nginx:alpine
    container_name: camsight-nginx
    ports:
      - "${EXPOSED_PORT:-80}:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - camsight-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:80/nginx-health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  camsight-network:
    driver: bridge
